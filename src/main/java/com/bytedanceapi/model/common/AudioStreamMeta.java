// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: vod_media.proto

package com.bytedanceapi.model.common;

/**
 * Protobuf type {@code Vcloud.Models.Vod.AudioStreamMeta}
 */
public final class AudioStreamMeta extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:Vcloud.Models.Vod.AudioStreamMeta)
    AudioStreamMetaOrBuilder {
private static final long serialVersionUID = 0L;
  // Use AudioStreamMeta.newBuilder() to construct.
  private AudioStreamMeta(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private AudioStreamMeta() {
    codec_ = "";
  }

  @Override
  @SuppressWarnings({"unused"})
  protected Object newInstance(
      UnusedPrivateParameter unused) {
    return new AudioStreamMeta();
  }

  @Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private AudioStreamMeta(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            String s = input.readStringRequireUtf8();

            codec_ = s;
            break;
          }
          case 21: {

            duration_ = input.readFloat();
            break;
          }
          case 24: {

            sampleRate_ = input.readInt64();
            break;
          }
          case 32: {

            bitrate_ = input.readInt64();
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return VodMedia.internal_static_Vcloud_Models_Vod_AudioStreamMeta_descriptor;
  }

  @Override
  protected FieldAccessorTable
      internalGetFieldAccessorTable() {
    return VodMedia.internal_static_Vcloud_Models_Vod_AudioStreamMeta_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            AudioStreamMeta.class, Builder.class);
  }

  public static final int CODEC_FIELD_NUMBER = 1;
  private volatile Object codec_;
  /**
   * <pre>
   *音频编码格式
   * </pre>
   *
   * <code>string Codec = 1;</code>
   * @return The codec.
   */
  @Override
  public String getCodec() {
    Object ref = codec_;
    if (ref instanceof String) {
      return (String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      String s = bs.toStringUtf8();
      codec_ = s;
      return s;
    }
  }
  /**
   * <pre>
   *音频编码格式
   * </pre>
   *
   * <code>string Codec = 1;</code>
   * @return The bytes for codec.
   */
  @Override
  public com.google.protobuf.ByteString
      getCodecBytes() {
    Object ref = codec_;
    if (ref instanceof String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (String) ref);
      codec_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int DURATION_FIELD_NUMBER = 2;
  private float duration_;
  /**
   * <pre>
   *音频时长
   * </pre>
   *
   * <code>float Duration = 2;</code>
   * @return The duration.
   */
  @Override
  public float getDuration() {
    return duration_;
  }

  public static final int SAMPLERATE_FIELD_NUMBER = 3;
  private long sampleRate_;
  /**
   * <pre>
   *音频采样率
   * </pre>
   *
   * <code>int64 SampleRate = 3;</code>
   * @return The sampleRate.
   */
  @Override
  public long getSampleRate() {
    return sampleRate_;
  }

  public static final int BITRATE_FIELD_NUMBER = 4;
  private long bitrate_;
  /**
   * <pre>
   *音频码率(Kbps)
   * </pre>
   *
   * <code>int64 Bitrate = 4;</code>
   * @return The bitrate.
   */
  @Override
  public long getBitrate() {
    return bitrate_;
  }

  private byte memoizedIsInitialized = -1;
  @Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!getCodecBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, codec_);
    }
    if (duration_ != 0F) {
      output.writeFloat(2, duration_);
    }
    if (sampleRate_ != 0L) {
      output.writeInt64(3, sampleRate_);
    }
    if (bitrate_ != 0L) {
      output.writeInt64(4, bitrate_);
    }
    unknownFields.writeTo(output);
  }

  @Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!getCodecBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, codec_);
    }
    if (duration_ != 0F) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(2, duration_);
    }
    if (sampleRate_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(3, sampleRate_);
    }
    if (bitrate_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(4, bitrate_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @Override
  public boolean equals(final Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof AudioStreamMeta)) {
      return super.equals(obj);
    }
    AudioStreamMeta other = (AudioStreamMeta) obj;

    if (!getCodec()
        .equals(other.getCodec())) return false;
    if (Float.floatToIntBits(getDuration())
        != Float.floatToIntBits(
            other.getDuration())) return false;
    if (getSampleRate()
        != other.getSampleRate()) return false;
    if (getBitrate()
        != other.getBitrate()) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + CODEC_FIELD_NUMBER;
    hash = (53 * hash) + getCodec().hashCode();
    hash = (37 * hash) + DURATION_FIELD_NUMBER;
    hash = (53 * hash) + Float.floatToIntBits(
        getDuration());
    hash = (37 * hash) + SAMPLERATE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getSampleRate());
    hash = (37 * hash) + BITRATE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getBitrate());
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static AudioStreamMeta parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static AudioStreamMeta parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static AudioStreamMeta parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static AudioStreamMeta parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static AudioStreamMeta parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static AudioStreamMeta parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static AudioStreamMeta parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static AudioStreamMeta parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static AudioStreamMeta parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static AudioStreamMeta parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static AudioStreamMeta parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static AudioStreamMeta parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(AudioStreamMeta prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @Override
  protected Builder newBuilderForType(
      BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code Vcloud.Models.Vod.AudioStreamMeta}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:Vcloud.Models.Vod.AudioStreamMeta)
      AudioStreamMetaOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return VodMedia.internal_static_Vcloud_Models_Vod_AudioStreamMeta_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return VodMedia.internal_static_Vcloud_Models_Vod_AudioStreamMeta_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              AudioStreamMeta.class, Builder.class);
    }

    // Construct using com.bytedanceapi.model.common.AudioStreamMeta.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @Override
    public Builder clear() {
      super.clear();
      codec_ = "";

      duration_ = 0F;

      sampleRate_ = 0L;

      bitrate_ = 0L;

      return this;
    }

    @Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return VodMedia.internal_static_Vcloud_Models_Vod_AudioStreamMeta_descriptor;
    }

    @Override
    public AudioStreamMeta getDefaultInstanceForType() {
      return AudioStreamMeta.getDefaultInstance();
    }

    @Override
    public AudioStreamMeta build() {
      AudioStreamMeta result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @Override
    public AudioStreamMeta buildPartial() {
      AudioStreamMeta result = new AudioStreamMeta(this);
      result.codec_ = codec_;
      result.duration_ = duration_;
      result.sampleRate_ = sampleRate_;
      result.bitrate_ = bitrate_;
      onBuilt();
      return result;
    }

    @Override
    public Builder clone() {
      return super.clone();
    }
    @Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return super.setField(field, value);
    }
    @Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return super.addRepeatedField(field, value);
    }
    @Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof AudioStreamMeta) {
        return mergeFrom((AudioStreamMeta)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(AudioStreamMeta other) {
      if (other == AudioStreamMeta.getDefaultInstance()) return this;
      if (!other.getCodec().isEmpty()) {
        codec_ = other.codec_;
        onChanged();
      }
      if (other.getDuration() != 0F) {
        setDuration(other.getDuration());
      }
      if (other.getSampleRate() != 0L) {
        setSampleRate(other.getSampleRate());
      }
      if (other.getBitrate() != 0L) {
        setBitrate(other.getBitrate());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @Override
    public final boolean isInitialized() {
      return true;
    }

    @Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      AudioStreamMeta parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (AudioStreamMeta) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private Object codec_ = "";
    /**
     * <pre>
     *音频编码格式
     * </pre>
     *
     * <code>string Codec = 1;</code>
     * @return The codec.
     */
    public String getCodec() {
      Object ref = codec_;
      if (!(ref instanceof String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        codec_ = s;
        return s;
      } else {
        return (String) ref;
      }
    }
    /**
     * <pre>
     *音频编码格式
     * </pre>
     *
     * <code>string Codec = 1;</code>
     * @return The bytes for codec.
     */
    public com.google.protobuf.ByteString
        getCodecBytes() {
      Object ref = codec_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        codec_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     *音频编码格式
     * </pre>
     *
     * <code>string Codec = 1;</code>
     * @param value The codec to set.
     * @return This builder for chaining.
     */
    public Builder setCodec(
        String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      codec_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *音频编码格式
     * </pre>
     *
     * <code>string Codec = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearCodec() {
      
      codec_ = getDefaultInstance().getCodec();
      onChanged();
      return this;
    }
    /**
     * <pre>
     *音频编码格式
     * </pre>
     *
     * <code>string Codec = 1;</code>
     * @param value The bytes for codec to set.
     * @return This builder for chaining.
     */
    public Builder setCodecBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      codec_ = value;
      onChanged();
      return this;
    }

    private float duration_ ;
    /**
     * <pre>
     *音频时长
     * </pre>
     *
     * <code>float Duration = 2;</code>
     * @return The duration.
     */
    @Override
    public float getDuration() {
      return duration_;
    }
    /**
     * <pre>
     *音频时长
     * </pre>
     *
     * <code>float Duration = 2;</code>
     * @param value The duration to set.
     * @return This builder for chaining.
     */
    public Builder setDuration(float value) {
      
      duration_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *音频时长
     * </pre>
     *
     * <code>float Duration = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearDuration() {
      
      duration_ = 0F;
      onChanged();
      return this;
    }

    private long sampleRate_ ;
    /**
     * <pre>
     *音频采样率
     * </pre>
     *
     * <code>int64 SampleRate = 3;</code>
     * @return The sampleRate.
     */
    @Override
    public long getSampleRate() {
      return sampleRate_;
    }
    /**
     * <pre>
     *音频采样率
     * </pre>
     *
     * <code>int64 SampleRate = 3;</code>
     * @param value The sampleRate to set.
     * @return This builder for chaining.
     */
    public Builder setSampleRate(long value) {
      
      sampleRate_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *音频采样率
     * </pre>
     *
     * <code>int64 SampleRate = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearSampleRate() {
      
      sampleRate_ = 0L;
      onChanged();
      return this;
    }

    private long bitrate_ ;
    /**
     * <pre>
     *音频码率(Kbps)
     * </pre>
     *
     * <code>int64 Bitrate = 4;</code>
     * @return The bitrate.
     */
    @Override
    public long getBitrate() {
      return bitrate_;
    }
    /**
     * <pre>
     *音频码率(Kbps)
     * </pre>
     *
     * <code>int64 Bitrate = 4;</code>
     * @param value The bitrate to set.
     * @return This builder for chaining.
     */
    public Builder setBitrate(long value) {
      
      bitrate_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *音频码率(Kbps)
     * </pre>
     *
     * <code>int64 Bitrate = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearBitrate() {
      
      bitrate_ = 0L;
      onChanged();
      return this;
    }
    @Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:Vcloud.Models.Vod.AudioStreamMeta)
  }

  // @@protoc_insertion_point(class_scope:Vcloud.Models.Vod.AudioStreamMeta)
  private static final AudioStreamMeta DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new AudioStreamMeta();
  }

  public static AudioStreamMeta getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<AudioStreamMeta>
      PARSER = new com.google.protobuf.AbstractParser<AudioStreamMeta>() {
    @Override
    public AudioStreamMeta parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new AudioStreamMeta(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<AudioStreamMeta> parser() {
    return PARSER;
  }

  @Override
  public com.google.protobuf.Parser<AudioStreamMeta> getParserForType() {
    return PARSER;
  }

  @Override
  public AudioStreamMeta getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

